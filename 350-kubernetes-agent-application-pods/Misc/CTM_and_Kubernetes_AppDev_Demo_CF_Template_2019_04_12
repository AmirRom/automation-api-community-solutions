{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Resources": {
    "VPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "172.1.12.240/28",
        "InstanceTenancy": "default",
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "true",
        "Tags": [{"Key": "Name", "Value": "VPC FY20Seminar AppDev Session"}]
      }
    },
    "PublicSubnet": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "172.1.12.240/28",
        "AvailabilityZone": "us-west-2c",
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [{"Key": "Name", "Value": "SubNet FY20Seminar AppDev Session"}]
      }
    },
    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [{"Key": "Name", "Value": "InternetGateway FY20Seminar AppDev Session"}]
      }
    },
    "AttachGateway": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {"Ref": "VPC"},
        "InternetGatewayId": {"Ref": "InternetGateway"}
      }
    },
    "PublicRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {"VpcId": {"Ref": "VPC"}}
    },
    "PublicRoute": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        },
        "GatewayId": {
          "Ref": "InternetGateway"
        }
      },
      "DependsOn": "AttachGateway"
    },
    "PublicSubnetRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PublicSubnet" },
        "RouteTableId" : { "Ref" : "PublicRouteTable" }
      }
    },
    "CTMInstance": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "ImageId": "ami-048e2bf02aaebaa0c",
        "InstanceType": "m4.xlarge",
        "KeyName": "FY20AppDevDemo",
        "Monitoring": "false",
        "Tags": [{"Key": "Name", "Value": "FY20 Seminar AppDev Demo Control-M Instance"}],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "Description": "Primary network interface",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "PublicSubnet"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "172.1.12.249",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "CTMSecurityGroup"
              }
            ],
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
	  "DependsOn": "AttachGateway"
    },
	"K8SInstance": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "ImageId": "ami-0667c8a7d4c548615",
        "InstanceType": "t3.large",
        "KeyName": "FY20AppDevDemo",
		"UserData"       : { "Fn::Base64" : { "Fn::Join" : ["", [
             "#!/bin/bash -xe\n",
             "apt-get install curl python-software-properties\n",
			 "curl -sL https://deb.nodesource.com/setup_11.x | sudo -E bash -\n",
             "apt-get install nodejs\n",
             "wget --no-check-certificates https://{ "Fn::GetAtt" : [ "CTMInstance", "PrivateDnsName" ]}:8443/automation-api/ctm-cli.tgz\n",
             "useradd -d /home/ctmmft -m -s /bin/bash ctmmft\n",
             "echo 'ctmmft ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers\n",
             "ctm env add ctmprod https://{ "Fn::GetAtt" : [ "CTMInstance", "PrivateDnsName" ]}:8443/automation-api apiuser <password>\n",
             "ctm prov agent::install Agent.Linux controlm { "Fn::GetAtt" : [ "K8SInstance", "PrivateDnsName" ]}\n",
             "ctm config server:hostgroup:agent::add controlm KafkaMaster { "Fn::GetAtt" : [ "K8SInstance", "PrivateDnsName" ]}\n"
		]]}},
        "Monitoring": "false",
        "Tags": [{"Key": "Name", "Value": "Kubernetes Master Instance"}],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "Description": "Primary network interface",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "PublicSubnet"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "172.1.12.247",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "K8SSecurityGroup"
              }
            ],
            "AssociatePublicIpAddress": "true"
          }
        ]
      },
	  "DependsOn": "CTMInstance"
    },
    "SecurityGroupEgress": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "ClientSecurityGroup"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
	"CTMSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Control-M Infrastructure TestDrive",
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [{"Key": "Name", "Value": "CTM Security Group FY20Seminar AppDev Session"}]
      }
    },
	"RDPIngress": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {"GroupId": {"Ref": "CTMSecurityGroup"},
        "IpProtocol": "tcp", "FromPort": "3389", "ToPort": "3389", "CidrIp": "0.0.0.0/0"}
    },
    "SSHIngress": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {"GroupId": {"Ref": "CTMSecurityGroup"},
        "IpProtocol": "tcp", "FromPort": "22", "ToPort": "22", "SourceSecurityGroupId": {"Ref": "K8SSecurityGroup"}}
    },
	"RestSrvrIngress": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {"GroupId": {"Ref": "CTMSecurityGroup"},
        "IpProtocol": "tcp", "FromPort": "8443", "ToPort": "8443", "SourceSecurityGroupId": {"Ref": "K8SSecurityGroup"}}
    },	
    "CTMAgentIngress": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "CTMSecurityGroup"
        },
        "IpProtocol": "tcp",
        "FromPort": "7005",
        "ToPort": "7005",
        "SourceSecurityGroupId": {
          "Ref": "K8SSecurityGroup"
        }
      }
    },	
	"WebServerKubernetesInrgess": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "CTMSecurityGroup"
        },
        "IpProtocol": "tcp",
        "FromPort": "18080",
        "ToPort": "18080",
        "SourceSecurityGroupId": {
          "Ref": "K8SSecurityGroup"
        }
      }
    },
	"ICMPIngress": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "CTMSecurityGroup"
        },
        "IpProtocol": "icmp",
        "FromPort": "-1",
        "ToPort": "-1",
        "SourceSecurityGroupId": {
          "Ref": "K8SSecurityGroup"
        }
      }
    },
    "SecurityGroupEgress": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {"GroupId": {"Ref": "CTMSecurityGroup"}, "IpProtocol": "-1", "CidrIp": "0.0.0.0/0"}
    },
 	"K8SSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Kubernetes in FY20 AppDevDemo",
        "VpcId": {"Ref": "VPC"},
        "Tags": [{"Key": "Name", "Value": "KubernetesSG FY20 AppDev Demo"}]
      }
    },
    "KubernetesSSHIngress": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "K8SSecurityGroup"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "KubernetesCTMServerIngress": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "K8SSecurityGroup"
        },
        "IpProtocol": "tcp",
        "FromPort": "7006",
        "ToPort": "7006",
        "SourceSecurityGroupId": {
          "Ref": "CTMSecurityGroup"
        }
      }
    },	
	"AgentProvisionCTMServerIngress": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "K8SSecurityGroup"
        },
        "IpProtocol": "tcp",
        "FromPort": "7016",
        "ToPort": "7016",
        "SourceSecurityGroupId": {
          "Ref": "CTMSecurityGroup"
        }
      }
    },
	"KubernetesICMPIngress": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "K8SSecurityGroup"
        },
        "IpProtocol": "icmp",
        "FromPort": "-1",
        "ToPort": "-1",
        "SourceSecurityGroupId": {
          "Ref": "CTMSecurityGroup"
        }
      }
    },
    "K8SSecurityGroupEgress": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "K8SSecurityGroup"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    }
  },
  "Outputs": {
	"CTMInstancePublicIP": {
      "Description": "Server Instance Public IP Address",
      "Value": {
        "Fn::GetAtt": [
          "CTMInstance",
          "PublicIp"
        ]
      }
    },
	"K8SInstancePublicIP": {
      "Description": "Kubernetes Instance Public IP Address",
      "Value": {
        "Fn::GetAtt": [
          "K8SInstance",
          "PublicIp"
        ]
      }
    }
  },
  "Description": "Control-M FY20 AppDev Demo"
}